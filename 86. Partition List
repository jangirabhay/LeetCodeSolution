/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    
    public ListNode partition(ListNode head, int x) {
        ListNode temp = head;
        ArrayList<Integer> list = new ArrayList<>();
        while(temp != null){
            list.add(temp.val);
            temp = temp.next;
        }
        ArrayList<Integer> smaller = new ArrayList<>();
        ArrayList<Integer> greater = new ArrayList<>();
        for (int i = 0; i < list.size(); i++) {
            if(list.get(i) < x){
                smaller.add(list.get(i));
            }
            else{
                greater.add(list.get(i));
            }
        }
        list.removeAll(list);
        list.addAll(smaller);
        list.addAll(greater);

        ListNode dummy = new ListNode(0);
        ListNode current = dummy;

        for(int i=0; i<list.size(); i++){
            current.next = new ListNode(list.get(i));
            current = current.next;
        }
        return dummy.next;
    }
}
